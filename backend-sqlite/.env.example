# ==============================================
# TODO APP - INTERNATIONAL EMAIL VALIDATION
# Environment Configuration Template
# ==============================================

# ==============================================
# AUTHENTICATION (REQUIRED)
# ==============================================

# JWT Secret Key (CRITICAL SECURITY)
# Must be minimum 32 characters for production
# Generate secure key: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
# Development: Use any secure string (32+ chars)
# Production: Use cryptographically secure random key
JWT_SECRET=your-super-secret-jwt-key-minimum-32-characters-long-please

# JWT Token Expiration
# Examples: 1h, 24h, 7d, 30d
# Recommended: 24h for development, 1h for production
JWT_EXPIRES_IN=24h

# ==============================================
# APPLICATION ENVIRONMENT (REQUIRED)
# ==============================================

# Environment mode
# Options: development, production
# Development: Enables detailed logging and error messages
# Production: Optimized for performance and security
NODE_ENV=development

# ==============================================
# SERVER CONFIGURATION (OPTIONAL)
# ==============================================

# Server port for local development
# Production: Automatically set by hosting platforms (Render, Heroku, Railway)
# Local development: 3000 (default), 8080, or any available port
PORT=3000

# ==============================================
# INTERNATIONAL EMAIL VALIDATION
# ==============================================

# ‚úÖ NO ADDITIONAL CONFIGURATION REQUIRED!
#
# The international email validation works out-of-the-box with:
# - 200+ blocked disposable email domains (hardcoded)
# - Multi-language pattern recognition (hardcoded)
# - Provider categorization (hardcoded)
# - Performance optimized (no external API calls)
#
# This design ensures:
# ‚úÖ Maximum security
# ‚úÖ Best performance
# ‚úÖ No external dependencies
# ‚úÖ Simple deployment
# ‚úÖ Perfect for GitHub projects

# ==============================================
# SUPPORTED EMAIL PROVIDERS (AUTOMATIC)
# ==============================================

# ‚úÖ ACCEPTED EMAIL PROVIDERS:
# - Major International: Gmail, Outlook, Yahoo, iCloud, AOL
# - European Regional: Web.de, GMX, T-Online, Orange.fr, Mail.ru
# - Privacy Focused: ProtonMail, Tutanota, FastMail, Posteo
# - Educational: All .edu, .ac.uk, university domains
# - Business: All legitimate company email addresses

# ‚ùå AUTOMATICALLY BLOCKED:
# - 200+ disposable email services across multiple languages
# - English: 10minutemail, guerrillamail, mailinator, tempmail
# - German: wegwerfmail.de, einmalmail.de, zehnminutenmail.de
# - French: yopmail.fr, jetable.org, tempomail.fr
# - Spanish: correo-temporal.com, email-temporal.com
# - Italian: tempmail.it, email-temporanea.it
# - Russian: tempmail.ru, spambog.ru
# - Japanese: tempmail.jp, supermailer.jp
# - Portuguese: email-temporario.com.br
# - And many more international services

# ==============================================
# QUICK START GUIDE
# ==============================================

# 1. Copy this file to .env
#    cp .env.example .env
#
# 2. Generate secure JWT_SECRET:
#    node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
#
# 3. Update JWT_SECRET in .env with generated key
#
# 4. Start development server:
#    npm install
#    node server.js
#
# 5. Test email validation:
#    curl -X POST http://localhost:3000/health
#    Should show: "emailValidation": {"type": "international", "blockedDomains": 200+}
#
# 6. Test registration:
#    Real email: curl -X POST http://localhost:3000/auth/register -H "Content-Type: application/json" -d '{"username":"test","email":"test@gmail.com","password":"test123"}'
#    Disposable: curl -X POST http://localhost:3000/auth/register -H "Content-Type: application/json" -d '{"username":"spam","email":"test@10minutemail.com","password":"test123"}'

# ==============================================
# PRODUCTION DEPLOYMENT
# ==============================================

# Render.com:
# 1. Set Environment Variables in Render Dashboard:
#    JWT_SECRET = (generate secure 32+ character key)
#    NODE_ENV = production
# 2. Deploy - Email validation works automatically!

# Heroku:
# 1. Set Config Vars:
#    heroku config:set JWT_SECRET="your-secure-production-key"
#    heroku config:set NODE_ENV="production"
# 2. Deploy - Email validation works automatically!

# Railway:
# 1. Set Environment Variables in Railway Dashboard:
#    JWT_SECRET = (generate secure 32+ character key)
#    NODE_ENV = production  
# 2. Deploy - Email validation works automatically!

# ==============================================
# SECURITY NOTES
# ==============================================

# ‚ö†Ô∏è  NEVER commit .env to version control
# ‚úÖ  Use different JWT_SECRET for development and production
# ‚úÖ  Generate JWT_SECRET with cryptographically secure random generator
# ‚úÖ  Set NODE_ENV=production for live deployments
# ‚úÖ  Monitor logs for blocked disposable email attempts
# ‚úÖ  The system blocks 200+ domains automatically - no maintenance required

# ==============================================
# TESTING EMAIL VALIDATION
# ==============================================

# Test these email types to verify functionality:

# ‚úÖ SHOULD BE ACCEPTED:
# - Gmail: developer@gmail.com
# - Outlook: developer@outlook.com  
# - Yahoo: developer@yahoo.com
# - German: developer@web.de, developer@gmx.de
# - Business: developer@company.com
# - Education: student@university.edu
# - Privacy: developer@protonmail.com

# ‚ùå SHOULD BE REJECTED:
# - Disposable: test@10minutemail.com
# - Temporary: test@guerrillamail.com
# - German temp: test@wegwerfmail.de
# - French temp: test@yopmail.fr
# - Suspicious: test@temp123domains.com

# ==============================================
# INTERNATIONAL SUPPORT
# ==============================================

# The system automatically handles disposable emails in:
# üá∫üá∏ English (10minutemail, guerrillamail, mailinator)
# üá©üá™ German (wegwerfmail, einmalmail, zehnminutenmail)
# üá´üá∑ French (yopmail, jetable, tempomail)
# üá™üá∏ Spanish (correo-temporal, email-temporal)
# üáÆüáπ Italian (tempmail.it, email-temporanea)
# üá∑üá∫ Russian (tempmail.ru, spambog.ru)
# üáØüáµ Japanese (tempmail.jp, supermailer.jp)
# üáßüá∑ Portuguese (email-temporario.com.br)
# And many more languages and regions